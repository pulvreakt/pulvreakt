name: CI/CD Pipeline

on:
  workflow_call:
  workflow_dispatch:

jobs:
  staging-repo:
    runs-on: ubuntu-latest
    concurrency:
      group: staging-repo
    if: >-
      ${{
        !github.event.repository.fork
        && (
          github.event_name != 'pull_request'
          || github.event.pull_request.head.repo.full_name == github.repository
        )
      }}
    outputs:
      maven-central-repo-id: ${{ steps.staging-repo.outputs.MavenCentral }}
      next-version: ${{ steps.compute-next-version.outputs.next-version }}
      will-release: ${{ steps.compute-next-version.outputs.will-release }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Compute next release version
        id: compute-next-version
        uses: nicolasfara/precompute-semantic-release-version-action@1.0.2
        with:
          github-token: ${{ github.token }}
      - uses: DanySK/build-check-deploy-gradle-action@2.2.0
        with:
          maven-central-username: nicolasfarabegoli
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          should-run-codecov: false
          should-deploy: true
          build-command: true
          check-command: true
          deploy-command: |
            if [[ "${{ steps.compute-next-version.outputs.will-release }}" == "true" ]]; then
              ./gradlew -PforceVersion="${{ steps.compute-next-version.outputs.next-version }}" createStagingRepositoryOnMavenCentral --parallel
            else
              ./gradlew createStagingRepositoryOnMavenCentral --parallel
            fi
      - name: Save staging repository ID
        id: staging-repo
        run: |
          [[ -f build/staging-repo-ids.properties ]] || (
            echo "Staging repositories ID file not found" &&
            exit 1
          )
          REPO_IDS=$(cat build/staging-repo-ids.properties)
          echo "Staging repositories IDs:\n$REPO_IDS"
          echo $REPO_IDS >> $GITHUB_OUTPUT

  build:
    needs: [ staging-repo ]
    strategy:
      matrix:
        os: [ ubuntu, macos, windows ]
    runs-on: ${{ matrix.os }}-latest
    concurrency:
      group: build-${{ github.workflow }}-${{ matrix.os }}-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - uses: DanySK/build-check-deploy-gradle-action@2.2.0
        with:
          maven-central-username: nicolasfarabegoli
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.GPG_PRIVATEKEY }}
          signing-password: ${{ secrets.GPG_PASSPHRASE }}
          should-run-codecov: ${{ runner.os == 'Linux' }}
          codecov-directory: build/reports/kover/merged/xml
          github-token: ${{ github.token }}
          should-deploy: >-
            ${{
              !github.event.repository.fork
              && (
                github.event_name != 'pull_request'
                || github.event.pull_request.head.repo.full_name == github.repository
              )
            }}
          # Dry-deployment
          deploy-command: >-
            if [[ "${{ needs.staging-repo.outputs.will-release }}" == "true" ]]; then
              ./gradlew -PisMainHost=${{ runner.os == 'Linux' }} -PforceVersion="${{ needs.staging-repo.outputs.next-version }}" -PstagingRepositoryId=${{ needs.staging-repo.outputs.maven-central-repo-id }} uploadAll --parallel
            else
              ./gradlew -PisMainHost=${{ runner.os == 'Linux' }} -PstagingRepositoryId=${{ needs.staging-repo.outputs.maven-central-repo-id }} uploadAll --parallel
            fi

  docsite:
    runs-on: ubuntu-latest
    concurrency:
      group: docsite
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3.3.0
      - uses: actions/setup-node@v3
        with:
          node-version: 18.12
      - name: Build docsite
        run: |
          cd docsite
          yarn install
          yarn run build
      - name: Release docsite to Github Pages
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
        uses: JamesIves/github-pages-deploy-action@v4.4.1
        with:
          BRANCH: gh-pages
          FOLDER: docsite/build

  close-staging-repos:
    needs: [ staging-repo, build ]
    runs-on: ubuntu-latest
    concurrency:
      group: close-staging-repos
    if: >-
      ${{
        !github.event.repository.fork
        && (
          github.event_name != 'pull_request'
          || github.event.pull_request.head.repo.full_name == github.repository
        )
      }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3.3.0
      - uses: DanySK/build-check-deploy-gradle-action@2.2.0
        with:
          maven-central-username: nicolasfarabegoli
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          should-run-codecov: false
          should-deploy: true
          build-command: true
          check-command: true
          deploy-command: >-
            ./gradlew -PstagingRepositoryId=${{ needs.staging-repo.outputs.maven-central-repo-id }} close --parallel
  release:
    concurrency:
      group: release
    needs: [ staging-repo, build, docsite, close-staging-repos ]
    runs-on: ubuntu-latest
    # Prevent the release job if the run is on a PR or a fork
    if: >-
      ${{
        !github.event.repository.fork
        && (github.event_name != 'pull_request' ||
          github.event.pull_request.head.repo.full_name == github.repository
        )
        && github.ref == 'refs/heads/master'
      }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_TOKEN }}
      - name: Find the version of Node from package.json
        id: node-version
        run: echo "version=$(jq -r .engines.node package.json)" >> $GITHUB_OUTPUT
      - name: Install Node
        uses: actions/setup-node@v3.6.0
        with:
          node-version: ${{ steps.node-version.outputs.version }}
      - uses: DanySK/build-check-deploy-gradle-action@2.2.0
        env:
          STAGING_REPO_ID: ${{ needs.staging-repo.outputs.maven-central-repo-id }}
          ORG_GRADLE_PROJECT_releaseStage: true
        with:
          build-command: true
          check-command: true
          deploy-command: |
            npm install
            npx semantic-release
          should-run-codecov: false
          should-deploy: true
          github-token: ${{ github.token }}
          maven-central-username: nicolasfarabegoli
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.GPG_PRIVATEKEY }}
          signing-password: ${{ secrets.GPG_PASSPHRASE }}

  success:
    runs-on: ubuntu-latest
    needs:
      - staging-repo
      - release
      - build
      - docsite
    if: >-
      ${{
        always() && (
          contains(join(needs.*.result, ','), 'failure')
          || !contains(join(needs.*.result, ','), 'cancelled')
        )
      }}
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
